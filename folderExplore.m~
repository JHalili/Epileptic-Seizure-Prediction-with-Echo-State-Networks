%% Go through all folders in a file
% Start with a folder and get a list of all subfolders.
% Finds and prints names of all PNG, JPG, and TIF images in
% that folder and all of its subfolders.
function [file_properties, file_field_names]  = folderExplore(name)
format longg;
format compact;
folderFormat = '/home/joana/Documents/Thesis/Script_Datach/%s';
% % Ask user to confirm or change.
topLevelFolder = sprintf(folderFormat, name);

% Get list of all subfolders.
allSubFolders = genpath(topLevelFolder);
% Parse into a cell array.
remain = allSubFolders;
listOfFolderNames = {};
while true
    [singleSubFolder, remain] = strtok(remain, ':');
    if isempty(singleSubFolder)
        break;
    end
    listOfFolderNames = [listOfFolderNames ;singleSubFolder];
end
numberOfFolders = length(listOfFolderNames)
%baseFileNames = [];
%folderFileNumber = [];
file_properties=[];
total_seizures = 0;
% Process all image files in those folders.
chnl = struct('FP1_F7', 1, 'F7_T7', 2, 'T7_P7', 3 , ...
    'P7_O1', 4, 'FP1_F3', 5, 'F3_C3', 6, ...
    'C3_P3', 7, 'P3_O1', 8, 'FP2_F4', 9, ...
    'F4_C4', 10, 'C4_P4', 11, 'P4_O2', 12, ...
    'FP2_F8', 13, 'F8_T8', 14, 'T8_P8', 15, ...
    'P8_O2', 16, 'FZ_CZ', 17, 'CZ_PZ', 18, ...
    'P7_T7', 19, 'T7_FT9', 20, 'FT9_FT10', 21, ...
    'FT10_T8', 22);

file_field_names = {'file_name', 'start_time', 'end_time', 'number_of_seizures', ...
    'seizure_start_times', 'seizure_lengths', 'folder_nr', 'indices'};
file_counter = 0;
for k = 2 : numberOfFolders
    %     Get .edf files.
    thisFolder = listOfFolderNames{k};
    filePattern1 = sprintf('%s/*.%s', thisFolder, '.edf');
    file_counter = file_counter + size(dir(filePattern1), 1);
end;
for k = 2:5 %2 : numberOfFolders
    % Get this folder and print it out.
    thisFolder = listOfFolderNames{k};
    i = k-1;
    if(i < 10)
        file_summary_name = sprintf('chb0%d-summary.txt', i);
    else
        file_summary_name = sprintf('chb%d-summary.txt', i);
    end;
    if i<10
        dir_name = sprintf('ch0%d', i);
    else
        dir_name =sprintf('ch%d', i);
    end;
    fileID = fopen(sprintf('Datach/%s/%s', dir_name, file_summary_name));
    % get rid of the first 5 lines in the begining
    for it = 1:5
        file_line = fgets(fileID);
    end;
    %read channels for this patients
    file_line = fgets(fileID);
    
    while(length(file_line) > 5 && (strcmp(file_line(1,1:7), 'Channel')==1))
        % we are still reading channel updates
        formatSpec = 'Channel %d: %s';
        [nr, nm] = sscanf(file_line, formatSpec);
        chnl.nm = nr;
        file_line = fgets(fileID);
    end;
    file_line = fgets(fileID);
    while ischar(file_line)
        if(strcmp(file_line(1,1:11), 'File Name: ') == 1)
            file_name = file_line(1, 11:end-1);
            file_line = fgets(fileID);
            formatSpec = 'File Start Time: %u:%u:%u\n';
            start_time = sscanf(file_line, formatSpec);
            formatSpec = 'File End Time: %u:%u:%u';
            file_line = fgets(fileID);
            end_time = sscanf(file_line, formatSpec);
            formatSpec = 'Number of Seizures in File: %u';
            file_line = fgets(fileID);
            nr_seizures = sscanf(file_line, formatSpec);
            seizure_start = zeros(1, nr_seizures);
            seizure_length = zeros(1, nr_seizures);
            total_seizures = total_seizures + nr_seizures;
            
            for ii = 1: nr_seizures
                formatSpec = 'Seizure %d Start Time: %d seconds';
                file_line = fgets(fileID);
                s1 = sscanf(file_line, formatSpec);
                formatSpec = 'Seizure %d End Time: %d seconds';
                file_line = fgets(fileID);
                s2 = sscanf(file_line, formatSpec);
                
                seizure_start(1, ii) = s1(2, 1);
                seizure_length(1, ii) = s2(2, 1);
            end;
            file_properties(i).file_name = file_name;
            file_properties(i).start_time = start_time;
            file_properties(i).end_time = end_time;
            file_properties(i).nr_seizures = nr_seizures;
            file_properties(i).seizure_start = seizure_start;
            file_properties(i).seizure_length = seizure_length;
            
            file_line = fgets(fileID);
            file_line = fgets(fileID);
            
            file_name_field = 'file_name';
            file_name_value = file_name;
            
            start_time_field = 'start_time';
            start_time_value = start_time;
            
            end_time_field = 'end_time';
            end_time_value = end_time;
            
            nr_seizures_field = 'number_of_seizures';
            nr_seizures_value = nr_seizures;
            
            seizure_start_time_field = 'seizure_start_times';
            seizure_start_time_value = seizure_start;
            
            seizure_length_field = 'seizure_lengths';
            seizure_length_value = seizure_length;
            
            folder_number_field = 'folder_nr';
            folder_number_value = i;
            
            channel_indices = 'indices';
            channel_indices_values = chnl;
            
            f = struct(file_name_field, file_name_value, ...
                start_time_field, start_time_value, ...
                end_time_field, end_time_value, ...
                nr_seizures_field, nr_seizures_value, ...
                seizure_start_time_field, seizure_start_time_value, ...
                seizure_length_field, seizure_length_value, ...
                folder_number_field, folder_number_value, ...
                channel_indices, channel_indices_values);
            c = struct2cell(f);
            file_properties(end+1) = c;
            
        else if(strcmp(file_line(1,1:11), 'Channels ch') == 1)
                %star rows
                file_line = fgets(fileID);
                file_line = fgets(fileID);
                while(length(file_line) > 5)
                    % we are still reading channel updates
                    formatSpec = 'Channel %d: %s';
                    [nr, nm] = sscanf(file_line, formatSpec);
                    chnl.nm = nr;
                    file_line = fgets(fileID);
                end;
            end;
        end;
    end;
    fclose(fileID);
end;

end